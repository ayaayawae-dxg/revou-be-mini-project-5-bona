openapi: 3.0.0
info:
  title: BE Mini Project 5 (Microservice)
  version: 1.0.0
servers:
  - url: http://localhost:5000
    variables:
      base_url:
        default: localhost:5000
        description: local
tags:
  - name: Auth
  - name: Movies
  - name: Orders
  - name: Screening
paths:
  /:
    get:
      tags:
        - default
      summary: Ping
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ping"
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - fullname
                - role
              properties:
                username:
                  type: string
                password:
                  type: string
                fullname:
                  type: string
                role:
                  type: string
                  enum:
                    - user
                    - admin
              example:
                username: user3
                password: "12345"
                fullname: user3
                role: user
      responses:
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  status: 201
                  message: "User registered successfully"
                  data:
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmdWxsbmFtZSI6InVzZXIzIiwidXNlcm5hbWUiOiJ1c2VyMyIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNzEzNDI1NjEwLCJleHAiOjE3MTM1MTIwMTB9.ai3pyFA4OEqgtSRYvk4i4RdAt__Rni8dCt5s4GeT9nA
        "409":
          description: Failed response
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  status: 409
                  message: "Username already registered"
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
              example:
                username: user1
                password: "12345"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  status: 200
                  message: "Login successfully"
                  data:
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZnVsbG5hbWUiOiJ1c2VyMyIsInVzZXJuYW1lIjoidXNlcjMiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTcxMzQzOTY0MSwiZXhwIjoxNzEzNTI2MDQxfQ._2pezvZVrOJ704gBDBXGOu8WNoj27L3B7ayeFClBagA
  /movies/:
    get:
      tags:
        - Movies
      summary: Get All
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  status: 200
                  message: Movies fetched successfully
                  data:
                    - id: 1
                      title: Movies 1
                      duration: 120
                      show_time:
                        - "2024-04-15 03:55:00"
                        - "2024-05-13 03:00:00"
                        - "2024-05-13 08:30:00"
                        - "2024-05-13 12:00:00"
                        - "2024-05-14 04:00:00"
                        - "2024-05-18 03:00:00"
                        - "2024-05-18 04:00:00"
                        - "2024-05-19 05:00:00"
                        - "2024-05-19 06:00:00"
                      genre:
                        - Horror
                        - Comedy
                    - id: 2
                      title: Movies 2
                      duration: 60
                      show_time:
                        - "2024-05-12 23:00:00"
                        - "2024-05-13 01:00:00"
                        - "2024-05-13 03:00:00"
                        - "2024-05-13 05:30:00"
                        - "2024-05-14 04:00:00"
                        - "2024-05-18 03:00:00"
                        - "2024-05-18 04:00:00"
                        - "2024-05-19 05:00:00"
                        - "2024-05-19 06:00:00"
                      genre:
                        - Romance
                        - Mystery
                        - Adventure
                    - id: 3
                      title: Movie 2
                      duration: 120
                      show_time:
                        - "2024-05-11 01:00:00"
                        - "2024-05-11 02:00:00"
                        - "2024-05-11 03:00:00"
                        - "2024-05-11 04:00:00"
                      genre: []
                    - id: 4
                      title: Movies 4
                      duration: 120
                      show_time: []
                      genre: []
                    - id: 5
                      title: Movies 5
                      duration: 120
                      show_time: []
                      genre: []
    post:
      tags:
        - Movies
      summary: Create Movie
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - duration
                - rating
                - synopsis
                - title
                - director
                - cast
                - genre
              properties:
                duration:
                  type: number
                rating:
                  type: string
                  enum:
                    - G
                    - PG
                    - PG-13
                    - R
                    - NC-17
                synopsis:
                  type: string
                title:
                  type: string
                director:
                  type: array
                  items:
                    type: string
                cast:
                  type: array
                  items:
                    type: object
                    properties:
                      actor:
                        type: string
                      as_character:
                        type: string
                genre:
                  type: array
                  items:
                    type: string
              example:
                duration: 120
                rating: PG
                synopsis: SINOPSSISSSSS
                title: Movies 12
                director:
                  - director 1
                cast:
                  - actor: actor 1
                    as_character: Character 1
                  - actor: actor 2
                    as_character: Character 2
                genre:
                  - Comedy
                  - Romance
                  - Horror
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Failed response - Duplicate title
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  message:
                    type: string
                example:
                  success: false
                  status: 200
                  message: "Movies with same title already registered."
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                example:
                  success: true
                  status: 201
                  message: "Movies created successfully"
                  data:
                    id: 15
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /movies/{id}:
    get:
      tags:
        - Movies
      summary: Get By Id
      parameters:
        - name: id
          in: path
          description: ID of movie to fetch
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  status: 200
                  message: Movies detail fetched successfully
                  data:
                    id: 1
                    title: Movies 1
                    rating: G
                    duration: 120
                    synopsis: Synopsis 1
                    show_time:
                      - "2024-04-15 03:55:00"
                      - "2024-05-13 03:00:00"
                      - "2024-05-13 08:30:00"
                      - "2024-05-13 12:00:00"
                      - "2024-05-14 04:00:00"
                      - "2024-05-18 03:00:00"
                      - "2024-05-18 04:00:00"
                      - "2024-05-19 05:00:00"
                      - "2024-05-19 06:00:00"
                    cast:
                      - actor: Actor 1
                        as_character: Character A
                      - actor: Actor 2
                        as_character: Character B
                    director:
                      - Director 1
                    genre:
                      - Horror
                      - Comedy
    put:
      tags:
        - Movies
      summary: Update Movie
      parameters:
        - name: id
          in: path
          description: ID of movie to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - duration
                - rating
                - synopsis
                - title
                - director
                - cast
                - genre
              properties:
                id:
                  type: number
                duration:
                  type: number
                rating:
                  type: string
                  enum:
                    - G
                    - PG
                    - PG-13
                    - R
                    - NC-17
                synopsis:
                  type: string
                title:
                  type: string
                director:
                  type: array
                  items:
                    type: string
                cast:
                  type: array
                  items:
                    type: object
                    properties:
                      actor:
                        type: string
                      as_character:
                        type: string
                genre:
                  type: array
                  items:
                    type: string
              example:
                id: 15
                duration: 75
                rating: G
                synopsis: SINOPSSISSSSS
                title: Movies 12
                director:
                  - director 1
                cast:
                  - actor: actor 1
                    as_character: Character 1
                  - actor: actor 2
                    as_character: Character 2
                genre:
                  - Comedy
                  - Romance
                  - Horror
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                example:
                  success: true
                  status: 200
                  message: "Movies updated successfully"
                  data:
                    id: 15
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
    delete:
      parameters:
        - name: id
          in: path
          description: ID of movie to delete
          required: true
          schema:
            type: integer
      tags:
        - Movies
      summary: Delete
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  message:
                    type: string
                example:
                  success: true
                  status: 200
                  message: "Movies deleted successfully"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /orders:
    post:
      tags:
        - Orders
      summary: Order Ticket
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - movie_id
                - show_time
                - seat_id
              properties:
                movie_id:
                  type: number
                show_time:
                  type: string
                seat_id:
                  type: array
                  items:
                    type: number
              example:
                movie_id: 1
                show_time: "2024-05-13 03:00:00"
                seat_id:
                  - 1
                  - 2
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Failed response - Duplicate Seat
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  message:
                    type: string
                example:
                  success: false
                  status: 200
                  message: "Seat is already filled. Please choose another seat."
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /orders/history:
    get:
      tags:
        - Orders
      summary: Order History
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  status: 200
                  message: Order history fetched successfully
                  data:
                    - id: 19e6e582-02a0-404a-a42d-232943123f7b
                      seat:
                        - id: 9
                          seat: A1
                      show_time: "2024-05-12 23:00:00"
                      status: READY
                      title: Movies 2
                    - id: 1dd74a9f-b552-4850-97b9-561d40bcb9d6
                      seat:
                        - id: 1
                          seat: A1
                      show_time: "2024-05-12 23:00:00"
                      status: READY
                      title: Movies 2
                    - id: 395267e2-ec84-45b4-a20c-c8874e3f3789
                      seat:
                        - id: 2
                          seat: A2
                      show_time: "2024-05-19 06:00:00"
                      status: READY
                      title: Movies 2
                    - id: 3a1791ea-0a0c-4161-aaa4-9e5aa0a53362
                      seat:
                        - id: 8
                          seat: B4
                      show_time: "2024-05-12 23:00:00"
                      status: READY
                      title: Movies 2
                    - id: 439b8c0b-76ba-4d9d-b282-df17109586f2
                      seat:
                        - id: 4
                          seat: A4
                      show_time: "2024-05-12 23:00:00"
                      status: READY
                      title: Movies 2
        "401":
          $ref: "#/components/responses/Unauthorized"
  /screening:
    post:
      tags:
        - Screening
      summary: Create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - movie_id
                - theatre_id
                - show_time
              properties:
                movie_id:
                  type: number
                theatre_id:
                  type: number
                show_time:
                  type: array
                  items:
                    type: string
              example:
                movie_id: 1
                theatre_id: 1
                show_time:
                  - "2024-05-13 03:00:00"
                  - "2024-05-13 04:00:00"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Failed response
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  message:
                    type: string
                example:
                  success: false
                  status: 200
                  message: "Duplicate show time"
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  message:
                    type: string
                example:
                  success: true
                  status: 201
                  message: "Screening created successfully."
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"

components:
  schemas:
    Ping:
      properties:
        success:
          type: boolean
        status:
          type: number
        message:
          type: string
      example:
        success: true
        status: 200
        message: "Ticket Reservation API"

    Error:
      properties:
        success:
          type: boolean
        status:
          type: boolean
        message:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  responses:
    Unauthorized:
      description: Unauthorized response
      content:
        application/json:
          schema:
            properties:
              success:
                type: boolean
              message:
                type: string
            example:
              success: false
              message: "invalid signature"
    Forbidden:
      description: Forbidden response
      content:
        application/json:
          schema:
            properties:
              success:
                type: boolean
              message:
                type: string
            example:
              success: false
              message: "You are not allowed"
