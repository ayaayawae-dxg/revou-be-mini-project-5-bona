openapi: 3.0.0
info:
  title: BE Mini Project 5 (Microservice)
  version: 1.0.0
servers:
  - url: http://localhost:5001
    variables:
      base_url:
        default: localhost:5001
        description: local
tags:
  - name: Products
paths:
  /:
    get:
      tags:
        - default
      summary: Ping
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ping"
  /products:
    post:
      tags:
        - Products
      summary: Order a product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - quantity
                - price
              properties:
                name:
                  type: string
                quantity:
                  type: number
                price:
                  type: number
              example:
                name: Samsung
                quantity: 3
                price: 10000
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Failed response
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  message:
                    type: string
                example:
                  success: false
                  status: 200
                  message: "Out of stock"
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: number
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /products/check-availability:
    get:
      tags:
        - Products
      summary: Get product availability
      parameters:
        - name: product_id
          in: query
          description: ID of product to check
          required: true
          schema:
            type: integer
        - name: quantity
          in: query
          description: Quantity of product to check
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  status: 200
                  message: check availability products successfully
                  data:
                    product_id: 1
                    available: true
                    quantity: 1

components:
  schemas:
    Ping:
      properties:
        success:
          type: boolean
        status:
          type: number
        message:
          type: string
      example:
        success: true
        status: 200
        message: "Orders API"

    Error:
      properties:
        success:
          type: boolean
        status:
          type: boolean
        message:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  responses:
    Unauthorized:
      description: Unauthorized response
      content:
        application/json:
          schema:
            properties:
              success:
                type: boolean
              message:
                type: string
            example:
              success: false
              message: "invalid signature"
    Forbidden:
      description: Forbidden response
      content:
        application/json:
          schema:
            properties:
              success:
                type: boolean
              message:
                type: string
            example:
              success: false
              message: "You are not allowed"
